mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
g <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
h <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
i <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row2 <- ggarrange(g, h, i, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
ggarrange(top_row, top_row2, ncol = 1, nrow = 2, labels = "AUTO")
nu <- 0.8
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75") %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
mutate(IV = zeta)
d <- AC_match_plot(data = df_IV_xSITA, match = nf_match_subsample)
e <- CR_match_plot(data = df_IV_xSITA, match = nf_match_subsample)
f <- AR_match_plot(data = df_IV_xSITA, match = nf_match_subsample)
bottom_row <- ggarrange(d, e, f, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Nearfar Match, Randomization-Control-Assignment-plots", size = 14))
prop_match <- pairmatch(t ~ X1 + X2 + zeta, controls = 1, df_IV_xSITA)
m_prop <- sum(!is.na(prop_match))/2
subsample_mids_prop <- paste("1.", sample(1:m_prop, 30), sep = "")
prop_match_subsample <- ifelse(prop_match %in% subsample_mids_prop, prop_match, NA)
a <- AC_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
b <- CR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
c <- AR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
df_IV_xSITA %>%
mutate(match = prop_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row <- ggarrange(a, b, c, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Propensity Score Match, Randomization-Assignment-Control plots", size = 14))
ggarrange(top_row, top_row2, ncol = 1, nrow = 2, labels = "AUTO")
prop_match <- pairmatch(t ~ X1 + X2 + zeta, controls = 1, df_IV_xSITA)
m_prop <- sum(!is.na(prop_match))/2
subsample_mids_prop <- paste("1.", sample(1:m_prop, 30), sep = "")
prop_match_subsample <- ifelse(prop_match %in% subsample_mids_prop, prop_match, NA)
a <- AC_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
b <- CR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
c <- AR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
df_IV_xSITA %>%
mutate(match = prop_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row <- ggarrange(a, b, c, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Propensity Score Match, Randomization-Assignment-Control plots", size = 14))
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
g <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
h <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
i <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row2 <- ggarrange(g, h, i, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
nu <- 0.8
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75", nu = nu) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
mutate(IV = zeta)
prop_match <- pairmatch(t ~ X1 + X2 + zeta, controls = 1, df_IV_xSITA)
m_prop <- sum(!is.na(prop_match))/2
subsample_mids_prop <- paste("1.", sample(1:m_prop, 30), sep = "")
prop_match_subsample <- ifelse(prop_match %in% subsample_mids_prop, prop_match, NA)
a <- AC_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
b <- CR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
c <- AR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
df_IV_xSITA %>%
mutate(match = prop_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row <- ggarrange(a, b, c, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Propensity Score Match, Randomization-Assignment-Control plots", size = 14))
ggarrange(top_row, top_row2, ncol = 1, nrow = 2, labels = "AUTO")
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
g <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
h <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
i <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row2 <- ggarrange(g, h, i, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
ggarrange(top_row2, bottom_row, ncol = 1, nrow = 2, labels = "AUTO")
ggarrange(top_row, top_row2, ncol = 1, nrow = 2, labels = "AUTO")
prop_match <- pairmatch(t ~ X1 + X2 + zeta, controls = 1, df_IV_xSITA)
m_prop <- sum(!is.na(prop_match))/2
subsample_mids_prop <- paste("1.", sample(1:m_prop, 30), sep = "")
prop_match_subsample <- ifelse(prop_match %in% subsample_mids_prop, prop_match, NA)
a <- AC_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
b <- CR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
c <- AR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
df_IV_xSITA %>%
mutate(match = prop_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row <- ggarrange(a, b, c, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Propensity Score Match, Randomization-Assignment-Control plots", size = 14))
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
g <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
h <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
i <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row2 <- ggarrange(g, h, i, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
ggarrange(top_row, top_row2, ncol = 1, nrow = 2, labels = "AUTO")
nu <- 0.4
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75", nu = nu) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
mutate(IV = zeta)
prop_match <- pairmatch(t ~ X1 + X2 + zeta, controls = 1, df_IV_xSITA)
m_prop <- sum(!is.na(prop_match))/2
subsample_mids_prop <- paste("1.", sample(1:m_prop, 30), sep = "")
prop_match_subsample <- ifelse(prop_match %in% subsample_mids_prop, prop_match, NA)
a <- AC_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
b <- CR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
c <- AR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
df_IV_xSITA %>%
mutate(match = prop_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row <- ggarrange(a, b, c, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Propensity Score Match, Randomization-Assignment-Control plots", size = 14))
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
g <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
h <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
i <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row2 <- ggarrange(g, h, i, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
prop_match <- pairmatch(t ~ X1 + zeta, controls = 1, df_IV_xSITA)
m_prop <- sum(!is.na(prop_match))/2
subsample_mids_prop <- paste("1.", sample(1:m_prop, 30), sep = "")
prop_match_subsample <- ifelse(prop_match %in% subsample_mids_prop, prop_match, NA)
a <- AC_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
b <- CR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
c <- AR_match_plot(data = df_IV_xSITA, match = prop_match_subsample)
df_IV_xSITA %>%
mutate(match = prop_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row <- ggarrange(a, b, c, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Propensity Score Match, Randomization-Assignment-Control plots", size = 14))
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
g <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
h <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
i <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(mean(diff), mean(diff > 0))
top_row2 <- ggarrange(g, h, i, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
ggarrange(top_row, top_row2, ncol = 1, nrow = 2, labels = "AUTO")
nu <- 0.4
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75",
nu = nu, rho_z = 0) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
mutate(IV = zeta)
View(df_IV_xSITA)
nu <- 0.4
# setting rho_z = 0 makes Z uncorrelated with any X's
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75",
nu = nu, rho_z = 0) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
select(-zeta) %>%
mutate(IV = Z)
IVrange <- range(df_IV_xSITA$Z)[2] - range(df_IV_xSITA$Z)[1]
nf <- opt_nearfar(dta = df_IV_xSITA, trt = "t", covs = c("X1", "X2"), iv = "Z",
trt.type = "bin", adjust.IV = TRUE, cutp.range = c(sd(df_IV_xSITA$Z)*1.5, IVrange),
max.time.seconds = 600)
knitr::opts_chunk$set(cache=TRUE, warning = FALSE, message = FALSE, echo = FALSE, fig.align = "center")
library(RACplots)
library(optmatch)
library(DOS2)
library(tidyverse)
library(ggpubr)
library(nearfar)
theme_set(theme_light())
# set some universal variables
prop_model = formula(t ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10)
prog_model = formula(y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10)
k = 1
IVrange <- range(df_IV_xSITA$Z)[2] - range(df_IV_xSITA$Z)[1]
nf <- opt_nearfar(dta = df_IV_xSITA, trt = "t", covs = c("X1", "X2"), iv = "Z",
trt.type = "bin", adjust.IV = TRUE, cutp.range = c(sd(df_IV_xSITA$Z)*1.5, IVrange),
max.time.seconds = 600)
IVrange <- range(df_IV_xSITA$Z)[2] - range(df_IV_xSITA$Z)[1]
nf <- opt_nearfar(dta = df_IV_xSITA, trt = "t", covs = c("X1", "X2"), iv = "Z",
trt.type = "bin", max.time.seconds = 600)
nf_match <- reformat_nf(nf, 2000)
m <- sum(!is.na(nf_match))/2
subsample_mids <- paste("1.", sample(1:m, 30), sep = "")
nf_match_subsample <- ifelse(nf_match %in% subsample_mids, nf_match, NA)
nf_AC <- AC_match_plot(data = df_IV_xSITA, match = nf_match_subsample)
nf_CR <- CR_match_plot(data = df_IV_xSITA, match = nf_match_subsample)
nf_AR <- AR_match_plot(data = df_IV_xSITA, match = nf_match_subsample)
nf_RAC <- ggarrange(nf_AC, nf_CR, nf_AR, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Nearfar Match, Randomization-Control-Assignment-plots", size = 14))
naive_match <- pairmatch(t ~ X1 + IV, controls = 1, df_IV_xSITA)
m_naive <- sum(!is.na(naive_match))/2
subsample_mids_naive <- paste("1.", sample(1:m_naive, 30), sep = "")
naive_match_subsample <- ifelse(naive_match %in% subsample_mids_naive, naive_match, NA)
naive_AC <- AC_match_plot(data = df_IV_xSITA, match = naive_match_subsample)
naive_CR <- CR_match_plot(data = df_IV_xSITA, match = naive_match_subsample)
naive_AR <- AR_match_plot(data = df_IV_xSITA, match = naive_match_subsample)
df_IV_xSITA %>%
mutate(match = naive_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0))
naive_RAC <- ggarrange(naive_AC, naive_CR, naive_AR, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Naive Match, Randomization-Assignment-Control plots", size = 14))
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
mahal_AC <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
mahal_CR <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
mahal_AR <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0))
mahal_RAC <- ggarrange(mahal_AC, mahal_CR, mahal_AR, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
ggarrange(naive_RAC, mahal_RAC, ncol = 1, nrow = 2, labels = "AUTO")
naive_match <- pairmatch(t ~ X1 + X2 + IV, controls = 1, df_IV_xSITA)
m_naive <- sum(!is.na(naive_match))/2
subsample_mids_naive <- paste("1.", sample(1:m_naive, 30), sep = "")
naive_match_subsample <- ifelse(naive_match %in% subsample_mids_naive, naive_match, NA)
naive_AC <- AC_match_plot(data = df_IV_xSITA, match = naive_match_subsample)
naive_CR <- CR_match_plot(data = df_IV_xSITA, match = naive_match_subsample)
naive_AR <- AR_match_plot(data = df_IV_xSITA, match = naive_match_subsample)
df_IV_xSITA %>%
mutate(match = naive_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0))
naive_RAC <- ggarrange(naive_AC, naive_CR, naive_AR, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Naive Match, Randomization-Assignment-Control plots", size = 14))
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
m_mahal <- sum(!is.na(mahal_match))/2
subsample_mids_mahal <- paste("1.", sample(1:m_mahal, 30), sep = "")
mahal_match_subsample <- ifelse(mahal_match %in% subsample_mids_mahal, mahal_match, NA)
mahal_AC <- AC_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
mahal_CR <- CR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
mahal_AR <- AR_match_plot(data = df_IV_xSITA, match = mahal_match_subsample)
df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0))
mahal_RAC <- ggarrange(mahal_AC, mahal_CR, mahal_AR, ncol = 3, nrow = 1) %>%
annotate_figure(top = text_grob("Mahalanobis Match on X1 and X2, Randomization-Assignment-Control-plots", size = 14))
ggarrange(naive_RAC, mahal_RAC, ncol = 1, nrow = 2, labels = "AUTO")
ggarrange(top_row2, bottom_row, ncol = 1, nrow = 2, labels = "AUTO")
ggarrange(mahal_RAC, nearfar_RAC, ncol = 1, nrow = 2, labels = "AUTO")
ggarrange(mahal_RAC, nf_RAC, ncol = 1, nrow = 2, labels = "AUTO")
ggarrange(naive_RAC, mahal_RAC, ncol = 1, nrow = 2, labels = "AUTO")
naive_df <- df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "naive")
naive_df
check_bias <- function(){
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75",
nu = nu, rho_z = 0) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
select(-zeta) %>%
mutate(IV = Z)
naive_match <- pairmatch(t ~ X1 + X2 + IV, controls = 1, df_IV_xSITA)
naive_df <- df_IV_xSITA %>%
mutate(match = naive_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "naive")
mahal_match <- pairmatch(t ~ X1 + X2, controls = 1, df_IV_xSITA)
mahal_df <- df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "mahal")
return(rbind(mahal_df, naive_df))
}
check_bias()
?replicate
replicate(check_bias(), 2, simplify = FALSE)
result <- replicate(check_bias(), 2, simplify = FALSE)
result <- replicate(2, check_bias(), simplify = FALSE)
result
result <- replicate(2, check_bias(), simplify = FALSE) %>% rbind()
result
result <- replicate(2, check_bias(), simplify = FALSE) %>% rbindrows()
result <- replicate(2, check_bias(), simplify = FALSE) %>% bind_rows()
result
result <- replicate(10, check_bias(), simplify = FALSE) %>% bind_rows()
ggplot(result, aes(x = method, y = bias, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = method, y = bias, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = method, y = bias, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method))+
geom_boxplot()
ggplot(result aes(x = proportion_sicker_treated, y = bias, color = method))+
ggplot(result, aes(x = method, y = bias, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = proportion_sicker_treated, y = bias, color = method))+
geom_scatter()
ggplot(result, aes(x = method, y = bias, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method))+
geom_boxplot()
ggplot(result, aes(x = proportion_sicker_treated, y = bias, color = method))+
geom_point()
result <- replicate(50, check_bias(), simplify = FALSE) %>% bind_rows()
ggplot(result, aes(x = method, y = bias, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(result, aes(x = proportion_sicker_treated, y = bias, color = method)) +
geom_point()
# for a fair comparison, should I make mahal_match on X1+X2+X3?  I think one thing
# that might be going on is that the naive match is worse on X1 and X2 because
# it's matching on three covariates instead of two.
check_bias <- function(){
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75",
nu = nu, rho_z = 0) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
select(-zeta) %>%
mutate(IV = Z)
naive_match <- pairmatch(t ~ X1 + X2 + IV, controls = 1, df_IV_xSITA)
naive_df <- df_IV_xSITA %>%
mutate(match = naive_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "naive")
mahal_match <- pairmatch(t ~ X1 + X2 + X3, controls = 1, df_IV_xSITA)
mahal_df <- df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "mahal")
return(rbind(mahal_df, naive_df))
}
result <- replicate(1, check_bias(), simplify = FALSE) %>% bind_rows()
result <- replicate(10, check_bias(), simplify = FALSE) %>% bind_rows()
ggplot(result, aes(x = method, y = bias, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(result, aes(x = proportion_sicker_treated, y = bias, color = method)) +
geom_point()
# for a fair comparison, should I make mahal_match on X1+X2+X3?  I think one thing
# that might be going on is that the naive match is worse on X1 and X2 because
# it's matching on three covariates instead of two.
check_bias <- function(){
df_IV_xSITA <- generate_data_IV_xSITA(true_mu = "X1/2 + 2*Z + nu*U - 1.75",
nu = nu, rho_z = 0) %>%
mutate(prop_naive = prop - nu * U,
prog_naive = prog - nu * U,
prop_naive_with_Z = prop - nu * U + 2*Z) %>%
select(-zeta) %>%
mutate(IV = Z)
naive_match <- pairmatch(t ~ X1 + X2 + IV, controls = 1, df_IV_xSITA)
naive_df <- df_IV_xSITA %>%
mutate(match = naive_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "naive")
mahal_match <- pairmatch(t ~ X1 + X2 + X3, controls = 1, df_IV_xSITA)
mahal_df <- df_IV_xSITA %>%
mutate(match = mahal_match) %>%
filter(!is.na(match)) %>%
arrange(match, t) %>%
group_by(match) %>%
summarize(diff = last(prog)-first(prog)) %>%
summarize(bias = mean(diff), proportion_sicker_treated = mean(diff > 0), method = "mahal")
return(rbind(mahal_df, naive_df))
}
result <- replicate(50, check_bias(), simplify = FALSE) %>% bind_rows()
ggplot(result, aes(x = method, y = bias, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(result, aes(x = proportion_sicker_treated, y = bias, color = method)) +
geom_point()
a <- ggplot(result, aes(x = method, y = bias, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2) +
ylab("Bias from Difference-in-Means Estimate")
b <- ggplot(result, aes(x = method, y = proportion_sicker_treated, fill = method, color = method)) +
geom_boxplot() +
geom_jitter(width = 0.2) +
ylab("Proportion of matches in which\n treated individual had greater prognosis")
c <- ggplot(result, aes(x = proportion_sicker_treated, y = bias, color = method)) +
geom_point() +
ylab("Bias from Difference-in-Means Estimate")+
xlab("Proportion of matches in which\n treated individual had greater prognosis")
ggarrange(a, b, common.legend = TRUE, labels = "AUTO")
c
citation{R}
citation()
