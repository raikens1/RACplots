RA_match_plot(data = df, match = m_caliper_match)
rho <- 0.5
# makes an AC plot, but assumes prog and prop are already specified in data
AC_plot2 <- function(data, title = ""){
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, prop, a))
plt <- ggplot(data = plt_data, aes( x = prop, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab(expression(paste("Propensity, ", phi, "(x)", sep = "")))
return(plt)
}
# makes an RC plot, assumes prog and IV are already specified in data
RC_plot <- function(data, title = ""){
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, IV, a))
plt <- ggplot(data = plt_data, aes( x = IV, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab(expression(paste("IV", sep = "")))
return(plt)
}
# makes an RC plot, assumes prop and IV are already specified in data
RA_plot <- function(data, title = ""){
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prop, IV, a))
plt <- ggplot(data = plt_data, aes( x = IV, y = prop, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = ""))) +
xlab(expression(paste("IV", sep = "")))
return(plt)
}
# assumes prog and prop already specified
AC_match_plot <- function(data, match, k = 1, title = "Matching"){
plt_data <- data %>%
mutate(m = match) %>%
mutate(a = ifelse (is.na(m), 0.9, 1),
t = as.factor(abs(1-t))) %>%
dplyr::select(c(t, prog, prop, m, a))
m_data <- plt_data %>%
filter(!is.na(m)) %>%
arrange(m, desc(t)) %>%
mutate(id = rep(1:(k + 1), sum(data$t))) %>%
dplyr::select(-c(t, a)) %>%
group_by(m) %>%
summarize(prop1 = first(prop), prop2 = last(prop),
prog1 = first(prog), prog2 = last(prog)) %>%
dplyr::select(prog1, prog2, prop1, prop2)
plt <- ggplot(data = plt_data, aes( x = prop, y = prog, group = t, color = t)) +
geom_point(aes(alpha = a), size = 1)+
scale_color_brewer(palette="Set1") +
geom_segment(data = m_data,
aes(x = prop1, y = prog1,
xend = prop2, yend = prog2),
color =  "black", group = NA, linetype = "dashed") +
ggtitle( title)+
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab(expression(paste("Propensity, ", phi, "(x)", sep = "")))
return(plt)
}
RC_match_plot <- function(data, match, k = 1, title = "Matching"){
plt_data <- data %>%
mutate(m = match) %>%
mutate(a = ifelse (is.na(m), 0.9, 1),
t = as.factor(abs(1-t))) %>%
dplyr::select(c(t, prog, IV, m, a))
m_data <- plt_data %>%
filter(!is.na(m)) %>%
arrange(m, desc(t)) %>%
mutate(id = rep(1:(k + 1), sum(data$t))) %>%
dplyr::select(-c(t, a)) %>%
group_by(m) %>%
summarize(IV1 = first(IV), IV2 = last(IV),
prog1 = first(prog), prog2 = last(prog)) %>%
dplyr::select(prog1, prog2, IV1, IV2)
plt <- ggplot(data = plt_data, aes( x = IV, y = prog, group = t, color = t)) +
geom_point(aes(alpha = a), size = 1)+
scale_color_brewer(palette="Set1") +
geom_segment(data = m_data,
aes(x = IV1, y = prog1,
xend = IV2, yend = prog2),
color =  "black", group = NA, linetype = "dashed") +
ggtitle( title)+
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab(expression(paste("IV", sep = "")))
return(plt)
}
RA_match_plot <- function(data, match, k = 1, title = "Matching"){
plt_data <- data %>%
mutate(m = match) %>%
mutate(a = ifelse (is.na(m), 0.9, 1),
t = as.factor(abs(1-t))) %>%
dplyr::select(c(t, prop, IV, m, a))
m_data <- plt_data %>%
filter(!is.na(m)) %>%
arrange(m, desc(t)) %>%
mutate(id = rep(1:(k + 1), sum(data$t))) %>%
dplyr::select(-c(t, a)) %>%
group_by(m) %>%
summarize(IV1 = first(IV), IV2 = last(IV),
prop1 = first(prop), prop2 = last(prop)) %>%
dplyr::select(prop1, prop2, IV1, IV2)
plt <- ggplot(data = plt_data, aes( x = IV, y = prop, group = t, color = t)) +
geom_point(aes(alpha = a), size = 1)+
scale_color_brewer(palette="Set1") +
geom_segment(data = m_data,
aes(x = IV1, y = prop1,
xend = IV2, yend = prop2),
color =  "black", group = NA, linetype = "dashed") +
ggtitle( title)+
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = "")))
xlab(expression(paste("IV", sep = "")))
return(plt)
}
# mahalanobis match
mahal_dist <- DOS2::smahal(df$t, df[,1:10])
m_match <- pairmatch(mahal_dist, controls = 1, df)
mahal_caliper_dist <- addcaliper(mahal_dist, z = df$t, p = df$prop, caliper = 0.1)
mahal_caliper_dist <- addcaliper(mahal_caliper_dist, z = df$t, p = df$prog, caliper = 0.1)
m_caliper_match <- pairmatch(mahal_caliper_dist, controls = k, df)
AC_match_plot(data = df, match = m_caliper_match)
RC_match_plot(data = df, match = m_caliper_match)
RA_match_plot(data = df, match = m_caliper_match)
prop_model = formula(t ~ . - mu - y)
# mahalanobis match
mahal_dist <- DOS2::smahal(df$t, df[,c(1,2, 4:10)])
m_match <- pairmatch(mahal_dist, controls = 1, df)
mahal_caliper_dist <- addcaliper(mahal_dist, z = df$t, p = df$prop, caliper = 0.1)
mahal_caliper_dist <- addcaliper(mahal_caliper_dist, z = df$t, p = df$prog, caliper = 0.1)
m_caliper_match <- pairmatch(mahal_caliper_dist, controls = k, df)
AC_match_plot(data = df, match = m_caliper_match)
RC_match_plot(data = df, match = m_caliper_match)
RA_match_plot(data = df, match = m_caliper_match)
ggarrange(a, b, c, ncol = 3, lables = "AUTO")
prop_model = formula(t ~ . - mu - y)
# mahalanobis match
mahal_dist <- DOS2::smahal(df$t, df[,c(1,2, 4:10)])
m_match <- pairmatch(mahal_dist, controls = 1, df)
mahal_caliper_dist <- addcaliper(mahal_dist, z = df$t, p = df$prop, caliper = 0.1)
mahal_caliper_dist <- addcaliper(mahal_caliper_dist, z = df$t, p = df$prog, caliper = 0.1)
m_caliper_match <- pairmatch(mahal_caliper_dist, controls = k, df)
a <- AC_match_plot(data = df, match = m_caliper_match)
b <- RC_match_plot(data = df, match = m_caliper_match)
c <- RA_match_plot(data = df, match = m_caliper_match)
ggarrange(a, b, c, ncol = 3, lables = "AUTO")
prop_model = formula(t ~ . - mu - y)
# mahalanobis match
mahal_dist <- DOS2::smahal(df$t, df[,c(1,2, 4:10)])
m_match <- pairmatch(mahal_dist, controls = 1, df)
mahal_caliper_dist <- addcaliper(mahal_dist, z = df$t, p = df$prop, caliper = 0.1)
mahal_caliper_dist <- addcaliper(mahal_caliper_dist, z = df$t, p = df$prog, caliper = 0.1)
m_caliper_match <- pairmatch(mahal_caliper_dist, controls = k, df)
a <- AC_match_plot(data = df, match = m_caliper_match)
b <- RC_match_plot(data = df, match = m_caliper_match)
c <- RA_match_plot(data = df, match = m_caliper_match)
ggarrange(a, b, c, ncol = 3, nrow =1, lables = "AUTO")
rho <- 0.5
# makes an AC plot, but assumes prog and prop are already specified in data
AC_plot2 <- function(data, title = ""){
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, prop, a))
plt <- ggplot(data = plt_data, aes( x = prop, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab(expression(paste("Propensity, ", phi, "(x)", sep = "")))
return(plt)
}
# makes an RC plot, assumes prog and IV are already specified in data
RC_plot <- function(data, title = ""){
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, IV, a))
plt <- ggplot(data = plt_data, aes( x = IV, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab(expression(paste("IV", sep = "")))
return(plt)
}
# makes an RC plot, assumes prop and IV are already specified in data
RA_plot <- function(data, title = ""){
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prop, IV, a))
plt <- ggplot(data = plt_data, aes( x = IV, y = prop, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = ""))) +
xlab(expression(paste("IV", sep = "")))
return(plt)
}
data
df
data <- df
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prop, IV, a))
plt <- ggplot(data = plt_data, aes( x = IV, y = prop, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = ""))) +
xlab(expression(paste("IV", sep = "")))
FC_plot <- function(df) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prop, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prop, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
df <- generate_rd_data()
devtools::load_all(".")
df <- generate_rd_data()
FC_plot(df)
FC_plot <- function(df) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prop, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prop, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
df <- generate_rd_data()
FC_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prop, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prop, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Propensity, ", phi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
df <- generate_rd_data()
FC_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
ggtitle(title) +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9))+
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
df <- generate_rd_data()
FC_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
df <- generate_rd_data()
FC_plot(df)
df
df %>% colnames()
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
RD_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, y, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = y, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
RD_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
RD_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, y, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = y, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
df <- generate_rd_data()
FC_plot(df)
RD_plot(df)
rho <- 0.5
df <- generate_rd_data()
FC_plot(df)
RD_plot(df)
rho <- 0.5
df <- generate_rd_data(sigma = 0.5)
FC_plot(df)
RD_plot(df)
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
FC_plot(df)
RD_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, prog, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
RD_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, y, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = y, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab("Observed Outcome") +
xlab("Forcing Variable")
return(plt)
}
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
FC_plot(df)
RD_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t))) %>%
dplyr::select(c(t, prog, X1))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = 0.9)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
RD_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t)),
a = ifelse(t == 1, 0.9, 1)) %>%
dplyr::select(c(t, y, X1, a))
plt <- ggplot(data = plt_data, aes( x = X1, y = y, group = t, color = t)) +
geom_point(size = 1, aes(alpha = a)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab("Observed Outcome") +
xlab("Forcing Variable")
return(plt)
}
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
FC_plot(df)
RD_plot(df)
FC_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t))) %>%
dplyr::select(c(t, prog, X1))
plt <- ggplot(data = plt_data, aes( x = X1, y = prog, group = t, color = t)) +
geom_point(size = 1, aes(alpha = 0.9)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab(expression(paste("Prognosis, ", Psi, "(x)", sep = ""))) +
xlab("Forcing Variable")
return(plt)
}
RD_plot <- function(data) {
plt_data <- data %>%
mutate(t = as.factor(abs(1-t))) %>%
dplyr::select(c(t, y, X1))
plt <- ggplot(data = plt_data, aes( x = X1, y = y, group = t, color = t)) +
geom_point(size = 1, aes(alpha = 0.9)) +
scale_color_brewer(palette="Set1") +
theme(legend.position = "none", aspect.ratio=1, plot.title = element_text(hjust = 0.5, size = 9)) +
ylab("Observed Outcome") +
xlab("Forcing Variable")
return(plt)
}
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
FC_plot(df)
RD_plot(df)
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
a <- FC_plot(df)
b <- RD_plot(df)
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
a <- FC_plot(df)
b <- RD_plot(df)
ggarrange(a, b, ncol = 2, nrow = 1, labels = "AUTO")
rho <- 0.5
df <- generate_rd_data(sigma = 0.25)
a <- FC_plot(df)
b <- RD_plot(df)
ggarrange(a, b, ncol = 2, nrow = 1, labels = "AUTO")
rho <- 1
df <- generate_rd_data(sigma = 0.25)
a <- FC_plot(df)
b <- RD_plot(df)
ggarrange(a, b, ncol = 2, nrow = 1, labels = "AUTO")
rho <- 1
df <- generate_rd_data(rho = rho, sigma = 0.25)
a <- FC_plot(df)
b <- RD_plot(df)
ggarrange(a, b, ncol = 2, nrow = 1, labels = "AUTO")
rho <- 0.9
df <- generate_rd_data(rho = rho, sigma = 0.25)
a <- FC_plot(df)
b <- RD_plot(df)
ggarrange(a, b, ncol = 2, nrow = 1, labels = "AUTO")
library(RACplots)
knitr::opts_chunk$set(cache=TRUE, warning = FALSE, message = FALSE, echo = FALSE, fig.align = "center")
library(RACplots)
library(optmatch)
library(DOS2)
library(dplyr)
library(ggplot2)
library(ggpubr)
theme_set(theme_light())
naive_df <- df %>%
mutate(mu = mu - nu * U)
